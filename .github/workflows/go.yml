# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Crosscompile RICv2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          lfs: true
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.2'
    - name: Install dependencies
      run: go get .
#    - uses: dsaltares/fetch-gh-release-asset@1.1.2
#      with:
#        repo: "PaulElijas/Robotik-Bestell-App"
#        version: "tags/v0.1"
#        file: "RobotikBestellApp.zip"
#        target: "web/RobotikBestellApp.zip"

    - name: Get Web page
      run: |
          cd web/
          rm index.html
          rm RICv2.ts
          rm app.html
          unzip RobotikBestellApp.zip
          rm RobotikBestellApp.zip
    - name: Build RICv2_linux_amd64
      run: GOOS=linux GOARCH=amd64 go build -o RICv2_linux_amd64 -v ./... 
    - name: Build RICv2_linux_arm64
      run: GOOS=linux GOARCH=arm64 go build -o RICv2_linux_arm64 -v ./... 
    - name: Build RICv2_linux_arm
      run: GOOS=linux GOARCH=arm go build -o RICv2_linux_arm -v ./... 
    - name: Build RICv2_windows_amd64
      run: GOOS=windows GOARCH=amd64 go build -o RICv2_windows_amd64.exe -v ./... 
    - name: Build RICv2_darwin_arm64
      run: GOOS=darwin GOARCH=arm64 go build -o RICv2_darwin_arm64 -v ./... 
    - name: "Upload RICv2.zip"
      uses: actions/upload-artifact@v4
      with:
        name: 'RICv2'
        path: RICv2_*
          
